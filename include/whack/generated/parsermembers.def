#define parser(p) mpc_parser_t* p{mpc_new(#p)}
parser(character); parser(integral); parser(binary); parser(octal); parser(hexadecimal); parser(floatingpt); parser(boolean); parser(string); parser(ident); parser(identlist); parser(scoperes); parser(simplesymbolname); parser(overloadid); parser(identifier); parser(factor); parser(arraytype); parser(fntype); parser(exprtype); parser(basictypes); parser(pointertype); parser(type); parser(typeident); parser(variadicarg); parser(args); parser(variadictype); parser(typelist); parser(capture); parser(closure); parser(newexpr); parser(sizeofval); parser(multiplicative); parser(additive); parser(shift); parser(relational); parser(equality); parser(bitwiseand); parser(bitwisexor); parser(bitwiseor); parser(logicaland); parser(logicalor); parser(callable); parser(funccall); parser(initlist); parser(memberinitlist); parser(initializer); parser(value); parser(alignofval); parser(offsetofval); parser(cast); parser(expansion); parser(expandop); parser(reference); parser(structmembercont); parser(structmember); parser(elementcont); parser(element); parser(variable); parser(range); parser(preop); parser(postop); parser(ternary); parser(addrof); parser(exprlist); parser(matchexprcase); parser(matchexpr); parser(expression); parser(let); parser(alias); parser(match); parser(typeswitch); parser(assign); parser(letbind); parser(ifstmt); parser(forinexpr); parser(forincrexpr); parser(forexpr); parser(forstmt); parser(whilestmt); parser(opeq); parser(declassign); parser(returnstmt); parser(deletestmt); parser(yieldstmt); parser(breakstmt); parser(continuestmt); parser(unreachablestmt); parser(deferstmt); parser(stmt); parser(body); parser(tag); parser(tags); parser(classdef); parser(enumdef); parser(enumeration); parser(dataclass); parser(function); parser(structdef); parser(structure); parser(overloadableops); parser(newoperator); parser(structopname); parser(structop); parser(structfunc); parser(structmembername); parser(interfacedef); parser(interface); parser(externfunc); parser(exports); parser(moduleuse); parser(moduledecl); parser(compileropt); parser(comment); parser(whack);
#undef parser